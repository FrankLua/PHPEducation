<!-- 

DRY - don't repead yourself

Каждая часть знаний должна иметь только одно представление
или
один источник правды
был сформулирован Энди Хантом и Дэйвом Томасом в их книге The Pragmatic Programmer


Сформулирован не только по отношению к коду но и к базе данных 
Чем плохо дублирование данных
1) изменять код прйдётся в двух местах сразу и иногда можно забыть про это


Как следовать принципам DRY 
1) Декомпозировать методы, классы, интерефейсы до той степени до которых их можно будет переиспользовать
это имеет сильное пересечение с первым правилом SOLID
2) Модульная архитектура

Противоположность DRY это WET write everything twice

Иногда система DRY не работает например 
1) Валидация форм на Бэкенд и фронтенд - валидировать данные от пользователя обязаны и фронт и бэк
2) Сетевые приложения реального времение 
3) Денормализация таблицы БД (увеличить производительность)
 -->